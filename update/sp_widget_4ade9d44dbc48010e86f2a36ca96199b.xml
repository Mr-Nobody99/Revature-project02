<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, $rootScope) {
  /* widget controller */	
	var slider = document.getElementById('animated-header');
	var menues = [];
	var subMenues = [];
	
  $scope.$watch('data.menu.items', function(){
		$scope.visibleItems = [];
		if($scope.data.menu.items) {
			for(var i in $scope.data.menu.items) {
				var item = $scope.data.menu.items[i];
				if(item.items || (item.scriptedItems && item.scriptedItems.count != 0))
					$scope.visibleItems.push(item);
			}
			if(slider) subMenues = makeSubMenues($scope.visibleItems, slider);
		}
	}, true);
	
	// Get list of record watchers
	var record_watchers = [];
	if ($scope.data.menu.items) {
		for(var i in $scope.data.menu.items) {
			var item = $scope.data.menu.items[i];
			if (item.type == 'scripted') {
				if (item.scriptedItems.record_watchers)
					record_watchers = record_watchers.concat(item.scriptedItems.record_watchers);
			}
			if (item.type == 'filtered') {
				record_watchers.push({'table':item.table,'filter':item.filter});
			}
		}
	}
	// Init record watchers
	for (var y in record_watchers){
		var watcher = record_watchers[y];
		spUtil.recordWatch($scope, watcher.table, watcher.filter);
	}
  $rootScope.$broadcast('sp-header-loaded');
	
	//Custom animated slide-down header functionality.	
	$scope.enterMenuLi = function(i, $event) {
		subMenues[i].classList.replace("sub-list", "active");//Display sub-menu
		if(slider) slider.classList.replace("slider", "start-slide");//Display slider
		for(var x in subMenues) {//Hide all other sub-menues
			if(x != i)subMenues[x].classList.replace("active", "sub-list");
		}
	}
	
	$scope.leaveMenuLi = function(i, $event){
		var target = $event.toElement;
		if(target.classList.contains("nav")){
			slider.classList.replace("start-slide","slider");
			subMenues[i].classList.replace("active", "sub-list");
		}
	}
}

function makeSubMenues(items, slider) {
	var arr = [];
	
	for(var i in items){
		
		var container = document.createElement('div');
		container.classList.add('sub-list');
		arr.push(container);
		
		var header = document.createElement('h3');
		header.classList.add('sub-menu-header');
		header.innerHTML = items[i].label;
		
		container.appendChild(header);
		
		var id = ('subMenu' + i);
		
		if(items[i].items.length > 0){	
			
			var subMenu = document.createElement('ul');
			
			for(var j in items[i].items) {
				var current = items[i].items[j];
				
				var label = items[i].items[j].label;
				
				var li = document.createElement('li');
				li.classList.add("sub-menu-li");
				
				var elementA = document.createElement('a');
				elementA.classList.add("sub-menu-link");
				if(current.href) elementA.href = current.href;
				
				var elementB = document.createElement('span');
				elementB.classList.add("sub-menu-span");
				
				elementB.innerHTML = label;
				elementA.appendChild(elementB);
				
				li.appendChild(elementA);
				subMenu.appendChild(li);
				
				container.appendChild(subMenu);
			}
		}
		if(slider.childElementCount < arr.length) slider.appendChild(container);
	}
	return arr;
}]]></client_script>
        <controller_as>c</controller_as>
        <css>span{
  cursor: default;
}

.header-loader {
	float: left;
  	width: 24px;
  	position: relative;
  	top: 24px;
}

.menu-item:hover {
  border-bottom: 5px solid lightblue;
}

@media  (max-width: 845px) and (min-width: 768px)  {
	.header-menu-item ul {
		right: auto;
		left: auto;
	}
}</css>
        <data_table>sp_instance_menu</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id/>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>HC Header Menu</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	
	var menu_id = $sp.getValue('sys_id');//instance sys_id
	var gr = new GlideRecord('sp_instance_menu');
	gr.get(menu_id);
	
	data.menu = {};
	data.menu.items = $sp.getMenuItems(menu_id);
	
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-09-17 17:53:42</sys_created_on>
        <sys_id>4ade9d44dbc48010e86f2a36ca96199b</sys_id>
        <sys_mod_count>487</sys_mod_count>
        <sys_name>HC Header Menu</sys_name>
        <sys_package display_value="Project2" source="x_393226_project2">bb4a5b6fdb737300e86f2a36ca9619b2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Project2">bb4a5b6fdb737300e86f2a36ca9619b2</sys_scope>
        <sys_update_name>sp_widget_4ade9d44dbc48010e86f2a36ca96199b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-09-27 14:47:07</sys_updated_on>
        <template><![CDATA[<ul class="nav navbar-nav" aria-label="${Header menu}" role="menubar" ng-mouseenter="enterMenu($event)" ng-mouseleave="leaveMenu($event)">
  <div class="header-loader" ng-class="{'invisible': !loadingIndicator}">
    <div class="hidden-xs sp-loading-indicator la-sm">
      <div></div>
      <div></div>
      <div></div>
    </div>
  </div>
  <li ng-repeat="item in visibleItems" ng-mouseenter="enterMenuLi($index, $event)" ng-mouseleave="leaveMenuLi($index, $event)" ng-class="{dropdown: item.items.length > 0, 'header-menu-item': true}" role="presentation">
    <a class="menu-item" ng-href="{{::item.href}}">
      <span ng-bind-html="::item.label"></span>      
    </a>
  </li>
</ul>]]></template>
    </sp_widget>
</record_update>
